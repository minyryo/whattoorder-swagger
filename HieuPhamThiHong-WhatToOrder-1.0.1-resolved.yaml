openapi: 3.0.0
info:
  title: WhatToOrder - AnGiHomNay API
  description: "WhatToOrder - AnGiHomNay is a food delivery app focused on personalized restaurant and cuisine recommendations.\nUsers can explore restaurants based on their dietary preferences, schedule orders for future delivery or pickup, \nand track their order status in real-time. This API provides endpoints for managing orders, browsing restaurants, \nand handling user preferences.\n"
  termsOfService: https://whattoorder.com/terms/
  contact:
    email: support@whattoorder.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.1
servers:
- url: https://app.swaggerhub.com/apis/HieuPhamThiHong/WhatToOrder/1.0.0
  description: SwaggerHub API Auto Mocking
- url: https://api.whattoorder.com/v1
tags:
- name: orders
  description: "Operations related to placing, scheduling, and tracking orders"
  externalDocs:
    description: Learn more about order management
    url: https://whattoorder.com/docs/orders
- name: restaurants
  description: Access and browse restaurant listings
  externalDocs:
    description: Learn more about restaurants and filters
    url: https://whattoorder.com/docs/restaurants
- name: users
  description: User account and profile management
  externalDocs:
    description: Learn more about user profiles and settings
    url: https://whattoorder.com/docs/users
- name: recommendations
  description: Personalized recommendations based on dietary needs and preferences
  externalDocs:
    description: Learn more about our recommendation engine
    url: https://whattoorder.com/docs/recommendations
paths:
  /restaurants/search:
    get:
      summary: Search Restaurants
      parameters:
      - name: location
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: cuisine_type
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: dietary_preference
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: nutritional_content
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: texture
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: cooking_method
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: A list of matching restaurants
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "400":
          $ref: '#/components/responses/BadRequest'
        "500":
          $ref: '#/components/responses/InternalServerError'
  /restaurants/{restaurant_id}:
    get:
      summary: View Restaurant Profile
      parameters:
      - name: restaurant_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Detailed restaurant profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "400":
          $ref: '#/components/responses/BadRequest'
        "500":
          $ref: '#/components/responses/InternalServerError'
  /restaurants/{restaurant_id}/reviews:
    post:
      summary: Submit User Review
      parameters:
      - name: restaurant_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/restaurant_id_reviews_body'
        required: true
      responses:
        "200":
          description: Review submitted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
        "400":
          $ref: '#/components/responses/BadRequest'
        "500":
          $ref: '#/components/responses/InternalServerError'
  /restaurants/sort:
    get:
      summary: Sort Restaurants
      parameters:
      - name: location
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: sort_by
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Sorted list of restaurants
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_3'
        "400":
          $ref: '#/components/responses/BadRequest'
        "500":
          $ref: '#/components/responses/InternalServerError'
  /restaurants/featured:
    get:
      summary: Get Featured Restaurants
      parameters:
      - name: user_id
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: List of featured restaurants based on user preferences
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
        "400":
          $ref: '#/components/responses/BadRequest'
        "500":
          $ref: '#/components/responses/InternalServerError'
  /restaurants/recommendations:
    get:
      summary: Get Recommended Restaurants
      parameters:
      - name: user_id
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: preferences
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: List of recommended restaurants
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_5'
        "400":
          $ref: '#/components/responses/BadRequest'
        "500":
          $ref: '#/components/responses/InternalServerError'
  /orders/carts/:
    post:
      summary: Add Item to Cart
      description: Endpoint to add an item to the user's cart.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/orders_carts_body'
        required: true
      responses:
        "200":
          description: Item successfully added to the cart
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_6'
        "400":
          $ref: '#/components/responses/BadRequest'
        "500":
          $ref: '#/components/responses/InternalServerError'
  /orders/carts:
    put:
      summary: Update Cart Item Quantity
      description: Update the quantity of an item in the user's cart.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/orders_carts_body_1'
        required: true
      responses:
        "200":
          description: Item quantity updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_7'
        "400":
          $ref: '#/components/responses/BadRequest'
        "500":
          $ref: '#/components/responses/InternalServerError'
  /orders/carts/{id}:
    get:
      summary: View Cart Details
      description: Retrieve detailed cart information based on cart ID and user ID.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: user_id
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: Cart details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_8'
        "400":
          $ref: '#/components/responses/BadRequest'
        "500":
          $ref: '#/components/responses/InternalServerError'
  /orders/schedule/delivery:
    post:
      summary: Schedule Delivery
      description: Schedule a delivery for the user's order.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/schedule_delivery_body'
        required: true
      responses:
        "200":
          description: Delivery scheduled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_9'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          description: Order or cart not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
        "500":
          $ref: '#/components/responses/InternalServerError'
  /orders/schedule/pickup:
    post:
      summary: Schedule Pickup
      description: Schedule a pickup for the user's order.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/schedule_pickup_body'
        required: true
      responses:
        "200":
          description: Pickup scheduled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_10'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          description: Order or cart not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
        "500":
          $ref: '#/components/responses/InternalServerError'
  /orders/history:
    get:
      summary: View List of Past Orders
      description: Retrieve a paginated list of past orders with an optional date range filter.
      parameters:
      - name: user_id
        in: query
        description: Unique identifier of the user.
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: date_range
        in: query
        description: "Optional date range for filtering order history (e.g., `2023-01-01 to 2023-01-31`)."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: The maximum number of orders to return.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 10
      - name: offset
        in: query
        description: The number of orders to skip before starting to return results.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      responses:
        "200":
          description: A list of past orders
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_11'
        "400":
          $ref: '#/components/responses/BadRequest'
        "500":
          $ref: '#/components/responses/InternalServerError'
  /orders/reorder/{order_id}:
    post:
      summary: Quick Reorder
      description: Create a new order based on a past order.
      parameters:
      - name: order_id
        in: path
        description: Unique identifier of the past order to be reordered.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Reorder created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_201'
  /orders/history/{order_id}:
    get:
      summary: Detailed Order Breakdown
      description: "Retrieve detailed information for a specific order, including items, quantity, price, nutritional info, and total cost."
      parameters:
      - name: order_id
        in: path
        description: Unique identifier of the order.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Detailed breakdown of the order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_12'
        "404":
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404_1'
components:
  schemas:
    User:
      type: object
      properties:
        user_id:
          type: integer
          description: Unique identifier for the user.
        username:
          type: string
          description: Username of the user.
        email:
          type: string
          description: User's email address.
          format: email
        created_at:
          type: string
          description: Timestamp of user account creation.
          format: date-time
    Restaurant:
      type: object
      properties:
        restaurant_id:
          type: integer
          description: Unique identifier for the restaurant.
        name:
          type: string
          description: Name of the restaurant.
        cuisine_type:
          type: string
          description: "Cuisine type (e.g., Italian, Chinese)."
        rating:
          type: number
          description: Average user rating for the restaurant.
          format: float
    Food:
      type: object
      properties:
        food_id:
          type: integer
          description: Unique identifier for the food item.
        restaurant_id:
          type: integer
          description: ID of the restaurant offering this food item.
        name:
          type: string
          description: Name of the food item.
        description:
          type: string
          description: Description of the food item.
        price:
          type: number
          description: Price of the food item.
          format: float
        nutritional_info:
          type: string
          description: Nutritional information for the food item.
    Order:
      type: object
      properties:
        order_id:
          type: integer
          description: Unique identifier for the order.
        user_id:
          type: integer
          description: ID of the user who placed the order.
        restaurant_id:
          type: integer
          description: ID of the restaurant from which the order was placed.
        date:
          type: string
          description: Date the order was placed.
          format: date
        total:
          type: number
          description: Total cost of the order.
          format: float
        order_items:
          type: array
          description: List of food items in the order.
          items:
            $ref: '#/components/schemas/Food'
    inline_response_200:
      type: object
      properties:
        restaurants:
          type: array
          items:
            $ref: '#/components/schemas/inline_response_200_restaurants'
    inline_response_200_1:
      type: object
      properties:
        menu_items:
          type: array
          items:
            $ref: '#/components/schemas/inline_response_200_1_menu_items'
        user_ratings:
          $ref: '#/components/schemas/inline_response_200_1_user_ratings'
        reviews:
          type: array
          items:
            $ref: '#/components/schemas/inline_response_200_1_reviews'
        contact_info:
          $ref: '#/components/schemas/inline_response_200_1_contact_info'
        location_map:
          type: string
        operating_hours:
          type: object
          additionalProperties:
            type: string
    restaurant_id_reviews_body:
      type: object
      properties:
        user_id:
          type: string
        rating:
          type: number
        review_text:
          type: string
    inline_response_200_2:
      type: object
      properties:
        review_id:
          type: string
        updated_average_rating:
          type: number
    inline_response_200_3:
      type: object
      properties:
        sorted_restaurants:
          type: array
          items:
            $ref: '#/components/schemas/inline_response_200_3_sorted_restaurants'
    inline_response_200_4:
      type: object
      properties:
        featured_restaurants:
          type: array
          items:
            $ref: '#/components/schemas/inline_response_200_3_sorted_restaurants'
    inline_response_200_5:
      type: object
      properties:
        recommended_restaurants:
          type: array
          items:
            $ref: '#/components/schemas/inline_response_200_3_sorted_restaurants'
    orders_carts_body:
      type: object
      properties:
        item_id:
          type: integer
          description: ID of the item to add to the cart
          example: 101
        quantity:
          type: integer
          description: Quantity of the item
          example: 2
        user_id:
          type: integer
          description: ID of the user
          example: 1
    inline_response_200_6:
      type: object
      properties:
        cart_id:
          type: integer
          example: 10
        cart_total:
          type: number
          format: float
          example: 150.75
    orders_carts_body_1:
      type: object
      properties:
        item_id:
          type: integer
          example: 101
        quantity:
          type: integer
          example: 3
        user_id:
          type: integer
          example: 1
    inline_response_200_7:
      type: object
      properties:
        cart_id:
          type: integer
          example: 10
        updated_cart_total:
          type: number
          format: float
          example: 200.5
    inline_response_200_8:
      type: object
      properties:
        items_in_cart:
          type: array
          items:
            $ref: '#/components/schemas/inline_response_200_8_items_in_cart'
        quantities:
          type: array
          items:
            type: integer
        total_cost:
          type: number
          format: float
    schedule_delivery_body:
      type: object
      properties:
        user_id:
          type: integer
        cart_id:
          type: integer
        delivery_time:
          type: string
          format: date-time
    inline_response_200_9:
      type: object
      properties:
        delivery_id:
          type: integer
          example: 12345
        status:
          type: string
          example: Scheduled
    inline_response_404:
      type: object
      properties:
        status:
          type: string
          example: 404 Not Found
        message:
          type: string
          example: Cart or order not found.
    schedule_pickup_body:
      type: object
      properties:
        user_id:
          type: integer
        cart_id:
          type: integer
        pickup_time:
          type: string
          format: date-time
    inline_response_200_10:
      type: object
      properties:
        pickup_id:
          type: integer
          example: 67890
        status:
          type: string
          example: Scheduled
    inline_response_200_11:
      type: object
      properties:
        orders:
          type: array
          items:
            $ref: '#/components/schemas/inline_response_200_11_orders'
        total_count:
          type: integer
          description: Total number of orders available.
    inline_response_201:
      type: object
      properties:
        new_order_id:
          type: string
          description: Unique identifier for the new reorder.
        status:
          type: string
          description: "Status of the reorder (e.g., \"Processing\")."
    inline_response_200_12:
      type: object
      properties:
        order_id:
          type: string
          description: Unique identifier for the order.
        order_items:
          type: array
          items:
            $ref: '#/components/schemas/inline_response_200_12_order_items'
        total_cost:
          type: number
          description: Total cost of the order.
          format: float
    inline_response_404_1:
      type: object
      properties:
        status:
          type: string
          description: Error status message
        message:
          type: string
          example: Order ID not found
    inline_response_200_restaurants:
      type: object
      properties:
        restaurant_id:
          type: string
        name:
          type: string
        cuisine_type:
          type: string
        rating:
          type: number
    inline_response_200_1_menu_items:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        photo_url:
          type: string
        price:
          type: number
    inline_response_200_1_user_ratings:
      type: object
      properties:
        average_rating:
          type: number
        total_reviews:
          type: integer
    inline_response_200_1_reviews:
      type: object
      properties:
        review_id:
          type: string
        user_id:
          type: string
        rating:
          type: number
        review_text:
          type: string
    inline_response_200_1_contact_info:
      type: object
      properties:
        phone:
          type: string
        email:
          type: string
    inline_response_200_3_sorted_restaurants:
      type: object
      properties:
        restaurant_id:
          type: string
        name:
          type: string
        rating:
          type: number
    inline_response_200_8_items_in_cart:
      type: object
      properties:
        item_id:
          type: integer
        name:
          type: string
        price:
          type: number
          format: float
    inline_response_200_11_orders:
      type: object
      properties:
        order_id:
          type: string
          description: Unique identifier for the order.
        date:
          type: string
          description: Date the order was placed.
          format: date
        total:
          type: number
          description: Total cost of the order.
          format: float
    inline_response_200_12_order_items:
      type: object
      properties:
        item_name:
          type: string
          description: Name of the item ordered.
        quantity:
          type: integer
          description: Quantity of the item.
        price:
          type: number
          description: Price per item.
          format: float
        nutritional_info:
          type: string
          description: Nutritional information for the item.
  responses:
    BadRequest:
      description: Bad Request - The request was invalid or cannot be served.
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: 400 Bad Request
              message:
                type: string
                example: Invalid parameter value.
    Unauthorized:
      description: Unauthorized - The user is not authenticated.
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: 401 Unauthorized
              message:
                type: string
                example: Authentication required.
    Forbidden:
      description: Forbidden - The user does not have permission to access this resource.
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: 403 Forbidden
              message:
                type: string
                example: Access denied.
    NotFound:
      description: Not Found - The requested resource could not be found.
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: 404 Not Found
              message:
                type: string
                example: Resource not found.
    InternalServerError:
      description: Internal Server Error - An error occurred on the server.
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: 500 Internal Server Error
              message:
                type: string
                example: An unexpected error occurred. Please try again later.
    ServiceUnavailable:
      description: Service Unavailable - The server is temporarily unavailable.
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: 503 Service Unavailable
              message:
                type: string
                example: Service is temporarily unavailable. Please try again later.
